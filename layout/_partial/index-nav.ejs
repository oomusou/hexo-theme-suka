<script>
  let titleFontSizes;
  let bodyFontSizes;
  let contentFontSizes;
  let archiveFontSizes;
  let searchTitleFontSizes;
  let searchBodyFontSizes;

  let getFontSize = ({ selector }) => {
    let element = document.querySelector(selector);

    if (element !== null) {
      let oriFontSize = window.getComputedStyle(element).fontSize;
      let incFontSize = parseInt(oriFontSize) * 1.2 + 'px';

      return [
        oriFontSize,
        incFontSize
      ];
    }

    return [0, 0];
  };

  let setFontSize = ({ selector, fontSize }) => document.querySelectorAll(selector).forEach(
    x => x.style['font-size'] = fontSize
  );

  let readFontSize = ({ key, value }) => {
    if (localStorage.getItem(key) !== null) {
      return localStorage.getItem(key);
    }
    else {
      return value;
    }
  };

  let writeFontSize = ({ key, fontSize }) => localStorage.setItem(key, fontSize);

  let loadFontSize = () => {
    // home
    setFontSize({
      selector: '.post-entry a.card-title',
      fontSize: readFontSize({ key: 'title', value: titleFontSizes[0] })
    });

    setFontSize({
      selector: '.post-entry .card-body' ,
      fontSize: readFontSize({ key: 'body', value: bodyFontSizes[0] })
    });

    // post
    setFontSize({
      selector: '#post-content',
      fontSize: readFontSize({ key: 'content', value: contentFontSizes[0] })
    });

    // archive
    setFontSize({
      selector: '.tile-title',
      fontSize: readFontSize({ key: 'archive', value: archiveFontSizes[0] })
    });

    // search
    setFontSize({
      selector: '.search-title',
      fontSize: readFontSize({ key: 'search-title', value: searchTitleFontSizes[0] })
    });

    setFontSize({
      selector: '.search-result-summary',
      fontSize: readFontSize({ key: 'search-body', value: searchBodyFontSizes[0] })
    });
  }

  let toggleFontSize = ({ selector, key, fontSizes }) => {
    let element = document.querySelector(selector);

    if (element !== null) {
      let fontSize = window.getComputedStyle(element).fontSize;

      if (fontSize === fontSizes[0]) {
        setFontSize({ selector, fontSize: fontSizes[1] });
        writeFontSize({ key, fontSize: fontSizes[1]})
      } else {
        setFontSize({ selector, fontSize: fontSizes[0] });
        writeFontSize({ key, fontSize: fontSizes[0] });
      }
    }
  };

  let increaseFontSize = () => {
    // home
    toggleFontSize({
      selector: '.post-entry a.card-title',
      key: 'title',
      fontSizes: titleFontSizes
    });

    toggleFontSize({
      selector: '.post-entry .card-body',
      key: 'body',
      fontSizes: bodyFontSizes
    });

    // post
    toggleFontSize({
      selector: '#post-content',
      key: 'content',
      fontSizes: contentFontSizes
    });

    // archive
    toggleFontSize({
      selector: '.tile-title',
      key: 'archive',
      fontSizes: archiveFontSizes
    });

    // search
    toggleFontSize({
      selector: '.search-title',
      key: 'search-title',
      fontSizes: searchTitleFontSizes
    });

    toggleFontSize({
      selector: '.search-result-summary',
      key: 'search-body',
      fontSizes: searchBodyFontSizes
    });
  };

  window.onload = function () {
    titleFontSizes = getFontSize({ selector: '.post-entry a.card-title' });
    bodyFontSizes = getFontSize({ selector: '.post-entry .card-body' });
    contentFontSizes = getFontSize({ selector: '#post-content' });
    archiveFontSizes = getFontSize({ selector: '.tile-title' });
    searchTitleFontSizes = getFontSize({ selector: '.search-title'});
    searchBodyFontSizes = getFontSize({ selector: '.search-result-summary'});

    loadFontSize();
  };
</script>
<nav class="navbar-section text-center">
  <div class="columns">
    <div class="column col-1"></div>
    <div class="column col-10 col-sm-12 align-content-center">
      <a href="<%= url_for('/') %>" class="navbar-link">Home</a>
      <a href="<%= url_for('tutorial/') %>" class="navbar-link">Tutorial</a>
      <a href="<%= url_for('archives/') %>" class="navbar-link hide-sm">Archives</a>
      <a href="<%= url_for('tags/') %>" class="navbar-link">Tags</a>
      <a href="<%= theme.nav.search.link %>" class="navbar-link">Search</a>
      <a href="<%= url_for(config.feed.path) %>" target="_blank" class="navbar-link">RSS</a>
    </div>
    <div class="column col-1 increase-font-size">
      <a class="hide-sm" style="cursor: pointer;" onclick="increaseFontSize()"><img
          src="/images/svg/font-size.svg"
          alt="font size" class="font-size"></a>
    </div>
  </div>
</nav>
